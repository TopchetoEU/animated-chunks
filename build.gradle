plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version as Object
group = project.maven_group as Object

repositories {
	maven {
		url "https://maven.terraformersmc.com/releases"
	}
	// maven {
	// 	url "https://jitpack.io/"
	// }
    mavenLocal()
}

dependencies {
    //to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API.
    //TODO try this approach to fabric api in the future to avoid unneeded modules.
    // for some reason it asks for like fabric-biomes and stuff right now.
//    Set<String> apiModules = [
//            "fabric-api-base",
//            "fabric-registry-sync-v0"
//    ]
//
   // Add each module as a dependency
//    apiModules.forEach {
//        modImplementation(fabricApi.module(it, project.fabric_version))
//    }

    // Fabric API.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Cloth Config / Autoconfig
    // modImplementation("me.shedaniel.cloth:config-2:${project.cloth_version}") {
    //     exclude(group: "net.fabricmc.fabric-api")
    //     exclude(module: "modmenu")
    // }
    // modImplementation("me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}") {
    //     exclude(group: "net.fabricmc.fabric-api")
    // }
    // include("me.shedaniel.cloth:config-2:${project.cloth_version}")
    // include("me.sargunvohra.mcmods:autoconfig1u:${project.autoconfig_version}")

    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
    // modImplementation("com.github.CaffeineMC:sodium-fabric:${project.sodium_version}")
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
loom {
	accessWidenerPath = file("src/main/resources/animated-chunks.accesswidener")
}
